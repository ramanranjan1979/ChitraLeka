@model ChitraLeka.ViewModel.Registration.Registration
@{
    ViewBag.Title = "New Registration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("CompleteRegistration", "Registration", FormMethod.Post, new { ID = "frmCreateRegistration", @class = "form-horizontal", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(e => e.Candidate.Id)
    @Html.HiddenFor(e => e.Candidate.DOB)
    <div class="row">
        <div class="col-md-12">
            <div class="content-box-large">

                <div class="panel-heading">
                    <div class="panel-title">New Registration</div>

                    <div class="panel-options">
                        <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                        <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                    </div>
                </div>

                <div class="panel-body">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Candidate.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(e => Model.Candidate.FirstName, htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Candidate.LastName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(e => Model.Candidate.LastName, htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.Candidate.Gender, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @if (Model.Candidate.GenderTypeId == "2")
                                {
                                    @Html.TextBox("GenderName", "Male", htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBox("GenderName", "Female", htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Candidate.DOB, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(e => Model.Candidate.DOB, htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Grade, Model.GradeTypes, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Candidate.PrimaryEmail, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(e => Model.Candidate.PrimaryEmail, htmlAttributes: new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextAreaFor(e => Model.Remark, new {placeholder="Any comments...", @class = "form-control", maxlength = 250, style = "width: 300px; height: 200px;" })
                            </div>
                        </div>

                        <div class="form-group">

                            @if (Model.RuleMessageList != null)
                            {
                                if (Model.RuleMessageList.Count() > 0)
                                {
                                    <div class="form-group alert alert-danger">
                                        @foreach (var rule in Model.RuleMessageList)
                                        {
                                            @Html.Label(rule.RuleMessage, rule.RuleMessage, htmlAttributes: new { @class = "control-label col-md-12", @style = "display:block;text-align:center;" })
                                        }
                                    </div>
                                }
                            }
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
