@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@model ChitraLeka.ViewModel.Contact.Parent

@{
    ViewBag.Title = "Parents Details";
}



@using (Html.BeginForm("CreateParentsDetail", "Registration", FormMethod.Post, new { ID = "frmCreateParentsDetail", @class = "form-horizontal", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="content-box-large">

                <div class="panel-heading">
                    <div class="panel-title">Father's Details</div>

                    <div class="panel-options">
                        <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                        <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                    </div>
                </div>

                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(e => e.ChildPersonId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.PersonTypes, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Father.PersonTypeId, Model.Father.PersonTypes, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.Salutations, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Father.SalutationTypeId, Model.Father.Salutations, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.Gender, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Father.GenderTypeId, Model.Father.Gender, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Father.FirstName, new { htmlAttributes = new { placeholder = "Father First Name", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Father.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.MiddleName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Father.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Father.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Father.LastName, new { htmlAttributes = new { placeholder = "Father Last Name", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Father.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Father.DOB, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Father.DOB, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Father.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Primary Email Address", htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Father.PrimaryEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Father Email" } })
                                @Html.ValidationMessageFor(model => model.Father.PrimaryEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel-heading">
                    <div class="panel-title">Mothers's Details</div>

                    <div class="panel-options">
                        <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                        <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                    </div>
                </div>

                <div class="panel-body">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.PersonTypes, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Mother.PersonTypeId, Model.Mother.PersonTypes, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.Salutations, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Mother.SalutationTypeId, Model.Mother.Salutations, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.Gender, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.Mother.GenderTypeId, Model.Mother.Gender, new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Mother.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Mother First Name" } })
                                @Html.ValidationMessageFor(model => model.Mother.FirstName, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.MiddleName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Mother.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mother.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.LastName, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Mother.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Mother Last Name" } })
                                @Html.ValidationMessageFor(model => model.Mother.LastName, "", new { @class = "text-danger"})
                            </div>
                            </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother.DOB, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Mother.DOB, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Mother.DOB, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.Label("Primary Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Mother.PrimaryEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Mother Email" } })
                                @Html.ValidationMessageFor(model => model.Mother.PrimaryEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (Model.RuleMessageList != null)
                        {
                            if (Model.RuleMessageList.Count() > 0)
                            {
                                <div class="form-group alert alert-danger">
                                    @foreach (var rule in Model.RuleMessageList)
                                    {
                                        @Html.Label(rule.RuleMessage, rule.RuleMessage, htmlAttributes: new { @class = "control-label col-md-12", @style = "display:block;text-align:center;" })
                                    }
                                </div>
                            }
                        }

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn-primary">SUBMIT</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

<script type="text/javascript">

    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            dateFormat: "dd/M/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-75:+0"
        });

    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

