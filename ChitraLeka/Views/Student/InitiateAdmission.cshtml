@model ChitraLeka.ViewModel.Student.Student

@{
    ViewBag.Title = "New Admission";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



@using (Html.BeginForm("CompleteAdmission", "Student", FormMethod.Post, new { ID = "frmCreateRegistration" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(e => e.RegistrationId)

    <div class="row">
        <div class="col-md-12">
            <div class="content-box-large">
                <div class="panel-heading">
                    <div class="panel-title">New Admission</div>

                    <div class="panel-options">
                        <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                        <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(e => Model.Grade, htmlAttributes: new { @readonly = "Readonly" })
                            </div>
                        </div>



                        <div class="form-group">
                            <label for="GradeTerms" class="col-sm-2 control-label">Select Term</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.TermId, Model.GradeTerms, "-- select term --", new { @class = "form-control" })

                                @{
                                    if (Model.GradeTerms.Count() == 0)
                                    {
                                        <a href="/Lookup/CreateTerm">New Term</a>

                                    }
                                }

                            </div>
                            
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfAdmission, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.DateOfAdmission, new { htmlAttributes = new { @class = "form-control",@Readonly="Readonly" } })
                                @Html.ValidationMessageFor(model => model.DateOfAdmission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "Readonly" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "Readonly" } })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-2 col-md-2 control-label">Select Center</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(e => Model.AcademyCenterId, Model.AcademyCenters, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                            <div class="col-sm-10">
                                @Html.TextAreaFor(e => Model.Remark, new { placeholder = "Any comments...", @class = "form-control", maxlength = 250, style = "width: 300px; height: 200px;" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <span>@Html.ActionLink("Back to List", "Index")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>

    $(function () {
        $('#TermId').change(function () {
            var data = { "termId": $("#TermId :selected").val() };
            $.ajax({
                url: "/Lookup/GetTermDetailByTermId",
                type: "POST",
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {

                    d1 = data.d1Y + '-' + data.d1M + '-' + data.d1D;
                    d2 = data.d2Y + '-' + data.d2M + '-' + data.d2D;

                    $("#StartDate").val(d1);
                    $("#EndDate").val(d2);
                },
                error: function () {
                    // alert("Error");
                }
            });

        });
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            dateFormat: "dd/M/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-0:+1"
        });

    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
