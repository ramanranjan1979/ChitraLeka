@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@model ChitraLeka.ViewModel.Contact.Person

@{
    ViewBag.Title = "Change Personal Information";
}


@using (Html.BeginForm(new { ID = "frmUpdatePersonalInformation", @class = "form-horizontal", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="content-box-large">
                <div class="panel-heading">
                    <div class="panel-title">Update Person</div>

                    <div class="panel-options">
                        <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                        <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.PrimaryEmail)

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <p>
                                    @Html.ActionLink("Back to List", "Index")

                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="col-md-12">
        <div class="content-box-large">
            <div class="panel-heading">
                <div class="panel-title">Update Person Contacts</div>

                <div class="panel-options">
                    <a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                    <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>
                </div>
            </div>
            <div class="panel-body">

                <!-- modal placeholder-->
                <div id='myModal' class='modal fade in'>
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div id='myModalContent'></div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-offset-2 col-md-10" id="replacetarget1">
                        @{ Html.RenderAction("Index", "Addresses", new { id = Model.Id }); }
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-2 col-md-10" id="replacetarget2">
                        @{ Html.RenderAction("Index", "ContactNumbers", new { id = Model.Id }); }
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-offset-2 col-md-10" id="replacetarget3">
                        @{ Html.RenderAction("Index", "EmailAddresses", new { id = Model.Id }); }
                    </div>
                </div>

                
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a[data-modal]").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindForm(this);

            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //alert(result.url);
                        $('#replacetarget1').load(result.url); //  Load data from the server and place the returned HTML into the matched element

                        location.reload();


                    } else {
                        $('#myModalContent').html(result);
                        bindForm(dialog);
                    }
                }
            });




            return false;
        });
    }
</script>


<script type="text/javascript">

    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            dateFormat: "dd/M/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-70:+0"
        });

    });
</script>